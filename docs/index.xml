<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home title on Document</title>
    <link>https://y37u51k.github.io/</link>
    <description>Recent content in Home title on Document</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 13 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://y37u51k.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. Sagaコーディネーション</title>
      <link>https://y37u51k.github.io/saga-arch/coordination/</link>
      <pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://y37u51k.github.io/saga-arch/coordination/</guid>
      <description>Sagaコーディネーション Sagaの実装は各ステップをコーディネートするコードから作られており、下記2通りの手法が存在する 1. Choreography (コレオグラフ</description>
    </item>
    
    <item>
      <title>開発準備</title>
      <link>https://y37u51k.github.io/tips/developmentsetup/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://y37u51k.github.io/tips/developmentsetup/</guid>
      <description>AWS Toolkit for IntelliJ (Gradle)でのアプリ開発 参考： https://dev.classmethod.jp/articles/aws-toolkit-for-jetbrains-with-java8-gradle/ https://qiita.com/kalzit/items/5d64f93bf75aaaad9915 AWSでのサーバレスアプリケーションの開発／デプロイを効率化するために下記2つを用いる AWS Toolkit for</description>
    </item>
    
    <item>
      <title>3. 実行</title>
      <link>https://y37u51k.github.io/aws-saga-tutorial/3_execution/</link>
      <pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://y37u51k.github.io/aws-saga-tutorial/3_execution/</guid>
      <description>構築フローのテスト deploymentセクションで取得したURLをトリガーにステートマシーンのフローを起動する sagaLambda.tsでは</description>
    </item>
    
    <item>
      <title>2. 環境構築</title>
      <link>https://y37u51k.github.io/aws-saga-tutorial/2_deployment/</link>
      <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://y37u51k.github.io/aws-saga-tutorial/2_deployment/</guid>
      <description>コードの修正 コンパイルを実行する前に適宜コード修正を行う sagaLambda.ts内のStep Functionsデプロイリージョンを環境に合</description>
    </item>
    
    <item>
      <title>1. 事前準備</title>
      <link>https://y37u51k.github.io/aws-saga-tutorial/1_preparations/</link>
      <pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://y37u51k.github.io/aws-saga-tutorial/1_preparations/</guid>
      <description>NodeJSの導入 参考サイト： https://selegee.com/535/ https://tecadmin.net/install-latest-nodejs-amazon-linux/ 公式ページにてv14が指定されているので、14.xを指定して下記コマンドでインストール実行する $ curl --silent --location https://rpm.nodesource.com/setup_14.x |</description>
    </item>
    
    <item>
      <title>Hugoの導入とGithub Pageの作成</title>
      <link>https://y37u51k.github.io/tips/hugoandgithubpage/</link>
      <pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://y37u51k.github.io/tips/hugoandgithubpage/</guid>
      <description>Hugoの導入 インストール リリースページから、Win64bitをzipダウンロード 下記の例を参考に任意の場所にHugoのbinフォルダを作成</description>
    </item>
    
  </channel>
</rss>
